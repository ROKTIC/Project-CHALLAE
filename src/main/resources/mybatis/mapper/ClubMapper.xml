<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezen.springmvc.domain.club.mapper.ClubMapper">

    <!--     전체 클럽 조회 / club_list -->
    <select id="clubList" resultType="ClubDto">
        SELECT CLUB_NUM, CLUB_STOREDPHOTO, CLUB_NAME, CLUB_PRESIDENT, CLUB_LOCATION, CLUB_LEVEL, CLUB_MEMBERCOUNT
        FROM CLUB
        WHERE STATUS = '승인'
        ORDER BY CLUB_NUM DESC
    </select>

    <!-- 클럽목록의 검색 조건에 따른 클럽 전체 목록 반환 / club_list -->
    <select id="findBySearchCondition" resultType="ClubDto">
        SELECT CLUB_NUM, CLUB_STOREDPHOTO, CLUB_NAME, CLUB_PRESIDENT, CLUB_LOCATION, CLUB_LEVEL, CLUB_MEMBERCOUNT
        FROM (
        SELECT CEIL(ROW_NUMBER() OVER (ORDER BY CLUB_NUM DESC) / #{searchDto.limit}) AS page,
        CLUB_NUM, CLUB_STOREDPHOTO, CLUB_NAME, CLUB_PRESIDENT,
        CLUB_LOCATION, CLUB_LEVEL, CLUB_MEMBERCOUNT
        FROM CLUB
        WHERE STATUS = '승인'
        <if test="searchDto.searchValue != null">
            <if test="searchDto.searchType != null">
                <choose>
                    <when test="searchDto.searchType == 'clubName'">
                        AND CLUB_NAME LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                    </when>
                    <when test="searchDto.searchType == 'clubPresident'">
                        AND CLUB_PRESIDENT LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                    </when>
                    <when test="searchDto.searchType == 'clubLocation'">
                        AND CLUB_LOCATION LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                    </when>
                    <when test="searchDto.searchType == 'clubLevel'">
                        AND CLUB_LEVEL = #{searchDto.searchValue}
                    </when>
                </choose>
            </if>
            <if test="searchDto.searchType == null">
                <choose>
                    <when test="searchDto.searchValue != null">
                        AND (CLUB_NAME LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                        OR CLUB_PRESIDENT LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                        OR CLUB_LOCATION LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                        OR CLUB_LEVEL = #{searchDto.searchValue})
                    </when>
                </choose>
            </if>
        </if>
        ) AS subquery
        WHERE page = #{searchDto.page}
    </select>

    <!-- 클럽 등록 -->
    <insert id="clubRegister" parameterType="ClubDto">
        INSERT INTO CLUB (CLUB_NAME, CLUB_PRESIDENT, CLUB_INFO, CLUB_LEVEL, CLUB_LOCATION, CLUB_PHONE,
                          CLUB_PHOTO, CLUB_STOREDPHOTO, STATUS)
        VALUES (#{clubName}, #{clubPresident}, #{clubInfo}, #{clubLevel}, #{clubLocation},
                #{clubPhone}, #{clubPhoto}, #{clubStoredPhoto}, '보류')
    </insert>

    <!-- 클럽의 검색 조건에 따른 클럽 전체 개수 반환 / club_list -->
    <select id="countBySearchCondition" resultType="int">
        SELECT COUNT(CLUB_NUM) AS cnt
        FROM CLUB
        WHERE STATUS = '승인'
        <if test="searchDto.searchValue != null">
            <if test="searchDto.searchType != null">
                <choose>
                    <when test="searchDto.searchType == 'clubName'">
                        AND CLUB_NAME LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                    </when>
                    <when test="searchDto.searchType == 'clubPresident'">
                        AND CLUB_PRESIDENT LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                    </when>
                    <when test="searchDto.searchType == 'clubLocation'">
                        AND CLUB_LOCATION LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                    </when>
                    <when test="searchDto.searchType == 'clubLevel'">
                        AND CLUB_LEVEL = #{searchDto.searchValue}
                    </when>
                </choose>
            </if>
            <if test="searchDto.searchType == null">
                <choose>
                    <when test="searchDto.searchValue != null">
                        AND (CLUB_NAME LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                        OR CLUB_PRESIDENT LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                        OR CLUB_LOCATION LIKE CONCAT('%', #{searchDto.searchValue}, '%')
                        OR CLUB_LEVEL = #{searchDto.searchValue})
                    </when>
                </choose>
            </if>
        </if>
    </select>

    <!--    클럽번호 찾기 후 상세정보 출력 / club_detail -->
    <select id="findByClubNum" resultType="ClubDto">
        SELECT CLUB_NUM, CLUB_STOREDPHOTO, CLUB_NAME, CLUB_PRESIDENT, DATE_FORMAT(CLUB_REGDATE, '%Y-%m-%d') AS CLUB_REGDATE,
               CLUB_MEMBERCOUNT, CLUB_LEVEL, CLUB_LOCATION, CLUB_INFO
        FROM CLUB
        WHERE CLUB_NUM = #{clubNum} AND STATUS = '승인'
    </select>

    <!--    클럽 가입신청자 정보 클럽장에게 보내기 / club_join -->
    <insert id="clubJoinRequest" parameterType="ClubJoinListDto">
        INSERT INTO CLUBJOINLIST (CLUB_NUM, MEMBER_NUM, JOIN_MEMBERPHOTO, JOIN_MEMBERNAME, JOIN_MEMBERPHONE,
                                  JOIN_MEMBEREMAIL, JOIN_MEMBERLEVEL, JOIN_MEMBERINFO, JOIN_DATE, JOIN_STATUS)
        VALUES (#{clubNum}, #{memberNum}, #{joinMemberPhoto}, #{joinMemberName}, #{joinMemberPhone},
                #{joinMemberEmail}, #{joinMemberLevel}, #{joinMemberInfo}, NOW(), '대기')
    </insert>

    <!--    클럽장이 가입신청서 받기 / club_join -->
    <select id="clubJoinView" resultType="ClubJoinListDto">
        SELECT JOIN_NUM, CLUB_NUM, MEMBER_NUM, JOIN_MEMBERLEVEL, JOIN_MEMBERINFO, JOIN_DATE, JOIN_STATUS,
               JOIN_MEMBERNAME, JOIN_MEMBERPHONE, JOIN_MEMBEREMAIL, JOIN_MEMBERPHOTO
        FROM CLUBJOINLIST
        WHERE CLUB_NUM = #{clubNum} AND JOIN_STATUS = '대기'
    </select>

    <!--    클럽 가입 승인(status 업데이트) / club_join -->
    <update id="clubJoinApprove" parameterType="ClubJoinListDto">
        UPDATE CLUBJOINLIST
        SET JOIN_STATUS = '승인'
        WHERE JOIN_NUM = #{joinNum}
    </update>

    <!--    클럽 가입 거절(status 업데이트) / club_join -->
    <update id="clubJoinRefuse" parameterType="ClubJoinListDto">
        UPDATE CLUBJOINLIST
        SET JOIN_STATUS = '거절'
        WHERE JOIN_NUM = #{joinNum}
    </update>

    <!--내팀보기에서 식별할 클럽번호 / 클럽 정보 출력을 위한 이름, 소개, 클럽장(감독), 클럽생성일 , 멤버 수, 사진, -->
    <select id="myClubData" parameterType="String" resultType="ClubDto">
        SELECT club_num,
               club_name,
               club_info,
               club_president,
               DATE_FORMAT(club_regdate, '%Y-%m-%d') AS club_regdate,
               club_membercount,
               club_photo,
               club_storedPhoto
        FROM club
        WHERE club_num = #{clubNum}
    </select>

    <!-- 전체 클럽 수 출력 -->
    <select id="clubCount" resultType="int">
        SELECT COUNT(*) AS count
        FROM CLUB
    </select>

    <!-- 승인 대기 클럽 조회 -->
    <select id="findPendingClubs" resultType="ClubDto">
        SELECT *
        FROM CLUB
        WHERE STATUS = '보류'
    </select>

    <!-- 클럽 신청 승인 -->
    <update id="updateStatus" parameterType="map">
        UPDATE CLUB
        SET STATUS = #{status}
        WHERE CLUB_NUM = #{clubNum}
    </update>

    <!-- 클럽 신청  거절 -->
    <delete id="deleteClub" parameterType="int">
        DELETE
        FROM CLUB
        WHERE club_num = #{clubNum}
    </delete>

    <!--    클럽번호로 정보 가져오기 -->
    <select id="findClubById" parameterType="int">
        SELECT m.MEMBER_EMAIL
        FROM CLUB c
                 JOIN MEMBER m ON c.CLUB_PRESIDENT = m.MEMBER_NAME
        WHERE c.CLUB_NUM = #{clubNum}
    </select>

    <!--    관리자모드에서 클럽리스트 보여주기 -->
    <select id="allClubView" resultType="ClubDto">
        SELECT CLUB_NUM,
               CLUB_NAME,
               CLUB_PRESIDENT,
               CLUB_INFO,
               CLUB_PHOTO,
               CLUB_STOREDPHOTO,
               CLUB_PHONE,
               CLUB_MEMBERCOUNT,
               CLUB_LOCATION,
               CLUB_LEVEL
        FROM CLUB
        ORDER BY CLUB_NUM DESC
    </select>

    <!--   클럽 생성 유효성 검사를 위한 클럽명 확인하기 -->
    <select id="getClubName" parameterType="string" resultType="clubDto">
        SELECT CLUB_NAME
        FROM CLUB
        WHERE CLUB_NAME = #{clubName}
    </select>

</mapper>
